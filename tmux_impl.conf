set-option -g prefix C-b

set -g base-index 1
set -sg escape-time 0
set-option -g mouse on
set-option -g history-limit 200000
set -g mouse on
setw -g mode-keys vi

set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ",rxvt-unicode-256color:Tc"

set -g focus-events on

set -g update-environment "DISPLAY XAUTHORITY SSH_AUTH_SOCK"
set -g window-size smallest

set -g @resurrect-capture-pane-contents 'on'

unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

set -g focus-events on

# https://github.com/neovim/neovim/pull/3165 workaround for cursor shape:
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set -s user-keys[0] "\e[5;30006~"
set -s user-keys[1] "\e[5;30007~"

set-option -g set-titles on
set-option -g set-titles-string "#S / #W / #T"

set -s user-keys[2] "\e[5;30009~" # key: Subtract, mods: Control | Alt
bind-key -n User2  resize-pane -U 3

set -s user-keys[3] "\e[5;30010~" # key: Equals,   mods: Control | Alt
bind-key -n User3  resize-pane -D 3

set -s user-keys[4] "\e[5;30012~" # key: LBracket, mods: Control | Alt
bind-key -n User4  resize-pane -L 3

set -s user-keys[5] "\e[5;30013~" # key: RBracket, mods: Control | Alt
bind-key -n User5  resize-pane -R 3

bind-key -n User6  select-pane -m
set -s user-keys[6] "\e[5;30015~" # C-S-m

bind-key -n C-F12 select-pane -m
bind-key -n C-F11 join-pane
bind-key -n C-F10 join-pane -h

set -s user-keys[7] "\e[5;30016~" # C-S-j
bind-key -n User7  command-prompt -p "join-pane (below - vert split)"  "join-pane %%"

set -s user-keys[8] "\e[5;30017~" # C-S-u
bind-key -n User8  command-prompt -p "join-pane (above - vert split)"  "join-pane -b %%"

set -s user-keys[9] "\e[5;30018~" # C-S-t
bind-key -n User9  command-prompt -p "join-pane (right - horiz split)" "join-pane -h %%"

set -s user-keys[10] "\e[5;30019~" # C-S-y
bind-key -n User10 command-prompt -p "join-pane (left - horiz split)" "join-pane -bh %%"

bind-key ` run-shell '~/dotfiles/pspane/pspane.sh #{pane_id} #{pane_pid}'
bind-key v splitw -p 30 -h "python ~/dotfiles/vimmux/vimmux.py"
bind-key m run-shell '~/dotfiles/vimmux/movefile.sh #{pane_id}'
bind-key o run-shell '~/dotfiles/vimmux/ipython-show-tb.sh #{pane_id}'
bind-key h splitw -h 'htop'

bind-key Enter copy-mode
bind-key X confirm-before kill-session
bind-key x kill-pane
bind-key s command-prompt -I "" "rename-session -- '%%'"
bind-key r command-prompt -I "" "rename-window -- '%%'"
bind-key N command-prompt -I "" "new-session -s '%%'"
bind-key K respawn-pane -k

bind-key V split-window -h
bind-key S split-window -v
bind-key -n F11 send-keys C-l \; clear-history
bind-key -n M-\; last-pane

#bind-key M-- send-keys M--
#bind-key M-\ send-keys -l "\e\\"
#bind-key -n M-\ split-window -h -c '#{pane_current_path}'

set -s user-keys[11] "\e[5;30020~" # C-A--
set -s user-keys[12] "\e[5;30021~" # C-A-/
bind-key -n User11 split-window -b -v -c '#{pane_current_path}'
bind-key -n User12 split-window -b -h -c '#{pane_current_path}'

bind-key M-m set-option -g mouse on \; display 'Mouse: ON'
bind-key M-M set-option -g mouse off \; display 'Mouse: OFF'

bind-key F12 send-keys F12
bind-key -n F12 copy-mode

bind - move-pane -t '.-'
bind \\ move-pane -h -t '.-'

bind -n C-M-g resize-pane -L 3
bind -n C-M-h resize-pane -R 3
bind -n C-M-j resize-pane -U 3
bind -n C-M-m resize-pane -D 3

# Arrow pane move, conditinal on not being zoomed. Otherwise tmux unzooms automatically.
is_zoomed='echo "#{window_zoomed_flag}" | grep 1'
bind -n M-Left  if-shell "$is_zoomed" "" "select-pane -L"
bind -n M-Down  if-shell "$is_zoomed" "" "select-pane -D"
bind -n M-Up    if-shell "$is_zoomed" "" "select-pane -U"
bind -n M-Right if-shell "$is_zoomed" "" "select-pane -R"
bind M-Left  send-keys M-Left
bind M-Down  send-keys M-Down
bind M-Up    send-keys M-Up
bind M-Right send-keys M-Right

bind-key R source-file ~/.tmux.conf \; display 'Reloaded'
bind-key f command-prompt "find-window -- '%%'"

bind-key j command-prompt -p "join pane "  "join-pane %%"
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

unbind -n -Tcopy-mode MouseDragEnd1Pane

bind-key -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel primary > /dev/null; tmux save-buffer - | xclip -i -sel clipboard > /dev/null;"
bind-key -Tcopy-mode-vi Enter send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel primary > /dev/null; tmux save-buffer - | xclip -i -sel clipboard > /dev/null;"
bind-key -Tcopy-mode-vi Home send-keys -X start-of-line
bind-key -Tcopy-mode-vi End  send-keys -X end-of-line

set -s user-keys[13] "\e[5;30014~" # C-Space
bind-key -Tcopy-mode-vi User13 send-keys -X begin-selection
bind-key -n User13 send-keys "\e[5;30014~"

set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

setw -g clock-mode-colour colour135
set -g allow-rename on

set -g @1password-copy-to-clipboard 'off'
set -g @1password-subdomain 'cloudendure'
set -g @1password-vault ''
set-option -g set-titles-string "#W: #T"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'yardnsm/tmux-1password'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

run -b '~/dotfiles/tmux/tpm/tpm'
# }

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
setw -g mode-style "fg=#aab2bf bg=#3e4452"

# The messages {
set -g message-style bold,fg='#aab2bf',bg='#282c34'
set -g message-command-style bold,fg='#aab2bf',bg='#282c34'

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g window-style bg=black

# Status bar
set -g status-justify left
set -g allow-rename on
set -g status-position bottom
set -g status-style none
set -g status-bg '#282c34'
set -g status-fg '#aab2bf'
set -g status-right '#[fg=#aab2bf,bg=#3e4452,bold] #{s|^#(echo $HOME)|~|:pane_current_path} #[fg=#ffffff,bg=#264f78] #(ip -o route get to 8.8.8.8 | sed -n "s/.*src \([0-9.]\+\).*/\1/p") #[fg=#ffffff,bg=#0a7aca,bold] %a %d/%h/%Y#[fg=#ffffff,bg=#0a7aca,bold] %H:%M:%S '
set -g status-left '#[fg=#ffffff,bg=#0a7aca] #h #[fg=#ffffff,bg=#264f78] #S #[fg=#aab2bf,bg=#282c34]'
set -g status-right-length 200
set -g status-left-length 200
setw -g window-status-current-style fg='#aab2bf',bold,bg='#3e4452'
setw -g window-status-current-format ' #I #[fg=#aab2bf]#W#[fg=#aab2bf] '
setw -g window-status-style fg='#aab2bf',bg='#282c34',none
setw -g window-status-format ' #I #[fg=#aab2bf]#W#[fg=#5c6370] '
setw -g window-status-bell-style bold,fg='#aab2bf',bg='#282c34'
setw -g window-status-separator ''
set -g status-interval 1

# Message style
set -g message-style bg='#282c34',fg='#aab2bf'

# Pane borders
set -g pane-border-status bottom
set -g pane-border-format " #[fg=#61afef,bold]#T "
set -g pane-border-style fg='#aab2bf'
set -g pane-active-border-style fg='#61afef'
set-hook -g pane-focus-in 'set -w pane-border-status off'
