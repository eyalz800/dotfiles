
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [[ -z "$TMUX" ]] && [ "$SSH_CONNECTION" != "" ]; then
    if [ -z "$DISPLAY" ]; then
        echo "X DISPLAY not available"
        sleep 3
    fi
    [ -f ~/.fzf.bash ] && source ~/.fzf.bash
    tmux new-session
    exit
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
function n()
{
    m $@ | compup.py
}

function nn()
{
    mm $@ | compup.py
}
eval $(thefuck --alias)

function kp()
{
    for p in $(ps -efw | fzf --multi | awk '{print $2}')
    do
        kill -9 $p
    done
}

HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTCONTROL=erasedups
export HISTSIZE=10000
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi


# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

alias git-pretty="git log --oneline '--pretty=format:%h %Cblue%ad%Creset %ae %Cgreen%s%Creset'"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias rmwhite='git diff --cached --no-color > stage.diff && git apply --index -R stage.diff && git apply --index --whitespace=fix stage.diff && rm -f stage.diff'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#export PATH=/ssd1/trees/mlsdk:/ssd1/trees/node-v10.15.3-linux-x64/bin:/ssd1/trees/depot_tools:~/bin:~/bin/repo-toos:/usr/local/bim:$PATH
export PATH=$PATH:/opt/go/bin
export PATH=/home/local/MAGICLEAP/ykahanovitch/.cargo/bin:$PATH
export MLCERT=/ssd2/trees/mlsdk/internal/ml_internal.cert
export USE_CCACHE=1
export CCACHE_DIR=/home/local/MAGICLEAP/ykahanovitch/ccache
MY_ROOT="/ssd2/trees/ml2"
alias ccache $MY_ROOT/./prebuilts/misc/linux-x86/ccache/ccache
cd $MY_ROOT
source build/envsetup.sh

#L=phaedra_full-userdebug
#L=phaedra-userdebug
L=acamas-userdebug
lunch $L

#alias rn="mldb shell"
v8repo=/ssd1/trees/v8/v8
export PATH=$OUT/host/linux-x86/bin:/ssd1/trees/repo-tools:/ssd1/trees/v8/v8/tools/dev:$PATH
alias gm=$v8repo/tools/dev/gm.py
function wait-for-device { mldb wait-for-device && mldb shell setprop persist.ml.power.active 1; }

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#echo -en '\033]0;$(hostname) [\$(gettop):$L]\a'
PS1='\[\033]0;$(hostname) [$ANDROID_BUILD_TOP:$TARGET_PRODUCT-$TARGET_BUILD_VARIANT]\a\]'
#PS1=$PS1'\[033k$(hostname)\033\]'
if [ "$color_prompt" = yes ]; then
    PS1=$PS1'${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1=$PS1'${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt
